@page "/register"
<PageTitle>Register</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-6">
            <h3>Register form</h3>
            <EditForm Model="@user" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="username" @bind="@user.Username" />
                    <ValidationMessage For="@(() => user.Username)"/>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email address</label>
                    <input type="email" class="form-control" id="email" @bind="@user.Email" />
                    <ValidationMessage For="@(() => user.Email)"/>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" @bind="@user.Password" />
                    <ValidationMessage For="@(() => user.Password)"/>
                </div>
                <div class="mb-3">
                    <p>Gender</p>
                    <div class="form-check form-check-inline">
                        <input id="male" class="form-check-input" type="radio" name="gender" value="false" checked="@user.Gender.Equals(false)" @onchange="() => ChangeGender(false)"/>
                        <label for="male" class="form-check-label">Nam</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input id="female" class="form-check-input" type="radio" name="gender" value="true"  checked="@user.Gender.Equals(true)" @onchange="() => ChangeGender(true)"/>
                        <label for="female" class="form-check-label">Nữ</label>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">City</label>
                    <select class="form-control" @bind="@user.City">
                        <option value="">ban hay chon quoc gia nhe</option>
                        <option value="Việt Nam">Việt Nam</option>
                        <option value="Nhật Bản">Nhật Bản</option>
                        <option value="Campuchia">Campuchia</option>
                    </select>
                    <ValidationMessage For="@(() => user.City)"/>
                </div>
                <div class="mb-3">
                    <p>Sở thích</p>
                    @foreach (var hobby in allHobbies)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" checked="@user.Hobbies.Contains(hobby)" @onchange="(e)=>ChangeHobby(hobby,e.Value)"/>
                            <label class="form-check-label" >@hobby</label>
                        </div>
                    }
                </div>
                <div class="mb-3 form-check">
                    <button class="btn btn-primary" >Register</button>
                </div>
            </EditForm>
        </div>
        <div class="col-6">
            <h3>Show thông tin</h3>
            <p>Username: @user.Username </p>
            <p>Email: @user.Email </p>
            <p>Password: @user.Password </p>
            <p>Gender: @(user.Gender ? "Female" : "Male") </p>
            <p>City: @user.City </p>
            <p>Sở thích: @string.Join(", ", user.Hobbies) </p>
        </div>
    </div>
</div>


@code {
    private List<string> allHobbies = new List<string>()
    {
        "Ăn uống", "Ngủ", "Chơi game", "Du lịch"
    };

    private UserRegisterViewModel user = new UserRegisterViewModel();

    @* Đổi giới tính *@
    private void ChangeGender(bool gender) {
        user.Gender = gender;
    }

    @* Đổi sở thích *@
    private void ChangeHobby(string hobby, object isBooleanValue) {
        // kiểm tra xem có phải là boolean hay không (mang giá trị true hoặc false)
        // nếu là boolean thì gán giá trị cho biến kiểm tra
        if(isBooleanValue is bool checkedBoolValue) {
            // nếu checkbox được bấm CHỌN thì kiểm tra
            if(checkedBoolValue) {
                // nếu hobby chưa có trong danh sách thì thêm vào danh sách
                if(!user.Hobbies.Contains(hobby)) {
                    user.Hobbies.Add(hobby);
                }
            // nếu checkbox được bấm BỎ CHỌN thì kiểm tra
            } else {
                // nếu hobby nằm trong danh sách thì xoá khỏi danh sách
                if(user.Hobbies.Contains(hobby)) {
                    user.Hobbies.Remove(hobby);
                }
            }
        }
    }


    private void HandleSubmit() {
        // Lưu thông tin
        Console.WriteLine("Username: " + user.Username);
        Console.WriteLine("Email: " + user.Email);
        Console.WriteLine("Password: " + user.Password);
        Console.WriteLine("Gender: " + user.Gender);
        Console.WriteLine("City: " + user.City);
        Console.WriteLine("City: " + user.Hobbies);
    }
}